service: my-pollens
frameworkVersion: '3'
configValidationMode: error
useDotenv: true

plugins:
  - serverless-dynamodb
  - serverless-offline
  - serverless-plugin-typescript

custom:
  stage: '${self:provider.stage}'
  table: '${self:service}-table-${self:custom.stage}'

  serverless-dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.table}
            sources: [offline/migrations/seed.json]

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  runtime: nodejs18.x
  timeout: 10

functions:
  PollenFunction:
    handler: src/handler.handler
    role: LambdaExecutionRole
    package:
      individually: false
    environment:
      GOOGLE_API_KEY: ${env:GOOGLE_API_KEY}
    events:
      - http:
          path: log
          method: POST

resources:
  Resources:
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: lambda-dynamodb-access
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DeleteItem
                  Resource:
                    Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${PollensTable}
          - PolicyName: lambda-cloudwatch-logs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:TagResource
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/${self:service}-${self:provider.stage}-PollenFunction:*'

    PollensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.table}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
